load("//tf:rules.bzl", "tf_apply", "tf_apply_plan", "tf_init", "tf_module", "tf_plan", "tf_validate_test")

tf_module(
    name = "module",
    srcs = [
        "main.tf",
    ],
    marker = ".tf_module",
    plugins = [
        "terraform-provider-aws",
    ],
    deps = [
        "//app",
        "//live/one:module",
    ],
)

# "bazel run :init" generates or updates lock file. It has to be stored under source control.
# TODO: switch of OSes resets hash or plugin, need a better way like
#  (terraform providers lock -platform=linux_arm64 -platform=linux_amd64)
# but it requires plugins for all platforms be available. It is not the way of how toolchains are working.
tf_init(
    name = "init",
    module = ":module",
    lock = ".terraform.lock.hcl",
)

tf_validate_test(
    name = "validate",
    lock = ".terraform.lock.hcl",
    module = ":module",
)

# This one does not use pre-generated plan.
tf_apply(
    name = "apply",
    auto_approve = True,
    lock = ".terraform.lock.hcl",
    module = ":module",
)
